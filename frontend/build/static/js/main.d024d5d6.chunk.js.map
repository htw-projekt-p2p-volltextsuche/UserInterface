{"version":3,"sources":["../node_modules/mongodb/lib/core sync","../node_modules/mongodb/lib/core/connection sync","components/SearchForm.js","htw_logo.jpg","components/HeaderBanner.js","App.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","SearchForm","params","useForm","register","unregister","handleSubmit","getValues","useState","resultListEntries","setResultListEntries","inputFulltextList","setInputFulltextList","inputSpeakerList","setinputSpeakerList","inputAffiliationList","setInputAffiliationList","className","onSubmit","data","console","log","additions","index","length","fulltextKey","addition","connector","terms","push","filter","oneFilter","criteria","value","query","search","max_results","JSON","stringify","buildJSON","buildResultList","total","results","doc_id","score","type","onClick","prevInputFulltextList","concat","addFormRow","i","entries","metaData","addListElement","speaker","affiliation","date","sample","title","temp","splice","removeFulltextFormRow","HeaderBanner","src","htw_logo","alt","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d024d5d6.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 154;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 363;","import { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nfunction SearchForm(params) {\r\n  const { register, unregister, handleSubmit, getValues } = useForm();\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(buildJSON(data));\r\n    mockQueryResult();\r\n    //sendQuery(buildJSON(data));\r\n  };\r\n  const [resultListEntries, setResultListEntries] = useState([]);\r\n\r\n  const [inputFulltextList, setInputFulltextList] = useState([]);\r\n\r\n  const [inputSpeakerList, setinputSpeakerList] = useState([]);\r\n\r\n  const [inputAffiliationList, setInputAffiliationList] = useState([]);\r\n\r\n  return (\r\n    <div className=\"formContainer\">\r\n      <form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\r\n        <div className=\"formMainRow\">\r\n          <label className=\"freieSucheLabel\">Freie Suche</label>\r\n          <br />\r\n          <input\r\n            className=\"mainTextInput\"\r\n            type=\"text\"\r\n            {...register(\"mainTerm\")}\r\n          ></input>\r\n          <input type=\"button\" value=\"+\" onClick={addFulltextFormRow}></input>\r\n        </div>\r\n        {inputFulltextList}\r\n        <br />\r\n\r\n        <div className=\"formMainRow\">\r\n          <label className=\"freieSucheLabel\">Redner</label>\r\n          <br />\r\n          <input\r\n            className=\"mainTextInput\"\r\n            type=\"text\"\r\n            {...register(\"speaker0\")}\r\n          ></input>\r\n          <input type=\"button\" value=\"+\" onClick={addSpeakerFormRow}></input>\r\n        </div>\r\n\r\n        {inputSpeakerList}\r\n        <br />\r\n\r\n        <div className=\"formMainRow\">\r\n          <label className=\"freieSucheLabel\">Partei</label>\r\n          <br />\r\n          <input\r\n            className=\"mainTextInput\"\r\n            type=\"text\"\r\n            {...register(\"affiliation0\")}\r\n          ></input>\r\n          <input\r\n            type=\"button\"\r\n            value=\"+\"\r\n            onClick={addAffiliationFormRow}\r\n          ></input>\r\n        </div>\r\n        {inputAffiliationList}\r\n        <input id=\"formSubmit\" type=\"submit\"></input>\r\n      </form>\r\n      {resultListEntries}\r\n    </div>\r\n  );\r\n\r\n  function mockQueryResult() {\r\n    let data = {\r\n      total: 1,\r\n      results: [\r\n        {\r\n          doc_id: \"2cd6a8db-fdcd-4f56-9356-5e937540c94b\",\r\n          score: 1.870930349021494,\r\n        },\r\n      ],\r\n    };\r\n    buildResultList(data);\r\n  }\r\n\r\n  function buildResultList(data) {\r\n    //var string = new TextDecoder().decode(data);\r\n    //data = JSON.parse(string);\r\n    console.log(data);\r\n    console.log(data.results);\r\n    let i = 0;\r\n    let entries = [];\r\n    let metaData = {};\r\n    while (i < data.results.length) {\r\n      //metaData = getMetaData(data.results[i].docId);\r\n      entries.push(\r\n        addListElement(\r\n          i,\r\n          data.results[i].doc_id,\r\n          metaData.speaker,\r\n          metaData.affiliation,\r\n          metaData.date,\r\n          metaData.sample\r\n        )\r\n      );\r\n      i++;\r\n    }\r\n    setResultListEntries(entries);\r\n    return resultListEntries;\r\n  }\r\n\r\n  function getMetaData(uuid) {\r\n    const username = process.env.MONGO_INITDB_ROOT_USERNAME;\r\n    const password = process.env.MONGO_INITDB_ROOT_PASSWORD;\r\n    const url = process.env.MCLI_OPS_MANAGER_URL;\r\n\r\n    var MongoClient = require(\"mongodb\").MongoClient;\r\n  }\r\n\r\n  function addListElement(i, title, speaker, affiliation, date, sample) {\r\n    return (\r\n      <div key={i} className=\"listElement\">\r\n        <div className=\"elementTitel\">{title}</div>\r\n        <div className=\"elementExtra\">\r\n          {speaker}\r\n          {affiliation}\r\n          {date}\r\n        </div>\r\n        <div className=\"textSample\">{sample}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function buildJSON() {\r\n    let additions = [];\r\n\r\n    for (let index = 0; index < inputFulltextList.length; index++) {\r\n      let fulltextKey = \"fulltext\" + index;\r\n      let operatorKey = \"fulltextOperator\" + index;\r\n      let addition = {\r\n        connector: getValues(operatorKey),\r\n        terms: getValues(fulltextKey),\r\n      };\r\n      additions.push(addition);\r\n    }\r\n\r\n    let filter = [];\r\n\r\n    for (let index = 0; index < inputSpeakerList.length; index++) {\r\n      let speakerKey = \"speaker\" + index;\r\n      let oneFilter = {\r\n        criteria: \"speaker\",\r\n        value: getValues(speakerKey),\r\n      };\r\n      if (oneFilter.value !== \"\") {\r\n        filter.push(oneFilter);\r\n      }\r\n    }\r\n\r\n    for (let index = 0; index < inputAffiliationList.length; index++) {\r\n      let affiliationKey = \"affiliation\" + index;\r\n      let oneFilter = {\r\n        criteria: \"affiliation\",\r\n        value: getValues(affiliationKey),\r\n      };\r\n      if (oneFilter.value !== \"\") {\r\n        filter.push(oneFilter);\r\n      }\r\n    }\r\n    \r\n    let terms = getValues(\"mainTerm\");\r\n    let query = {\r\n      search: {\r\n        max_results: 25,\r\n        query: {\r\n          terms: terms,\r\n          additions: additions,\r\n        },\r\n        filter: filter,\r\n      },\r\n    };\r\n    return JSON.stringify(query)\r\n  }\r\n\r\n  function sendQuery(json) {\r\n    fetch(\r\n      window.location.protocol +\r\n        \"//\" +\r\n        window.location.host +\r\n        \":8421/api/searches\",\r\n      {\r\n        method: \"POST\",\r\n        body: json,\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n      }\r\n    )\r\n      .then((responseJson) => responseJson.body.getReader().read())\r\n      .then(({ _, value }) => buildResultList(value))\r\n      .catch((error) => console.log(error));\r\n    // .then((data) => {\r\n    //     buildResultList(JSON.parse(data));\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     console.log(error);\r\n    //   });\r\n  }\r\n\r\n  function addFulltextFormRow(params) {\r\n    setInputFulltextList((prevInputFulltextList) => {return prevInputFulltextList.concat(addFormRow(inputFulltextList.length, \"fulltext\"))});\r\n    //inputFulltextList.concat(addFormRow(fulltextRowCount, \"fulltext\")\r\n  }\r\n  function addSpeakerFormRow(params) {\r\n    setinputSpeakerList(\r\n      inputSpeakerList.concat(addFormRow(inputSpeakerList.length, \"speaker\"))\r\n    );\r\n  }\r\n  function addAffiliationFormRow(params) {\r\n    setInputAffiliationList(\r\n      inputAffiliationList.concat(\r\n        addFormRow(inputAffiliationList.length, \"affiliation\")\r\n      )\r\n    );\r\n  }\r\n\r\n  function removeFulltextFormRow(index) {\r\n    setInputFulltextList(prevInputFulltextList => {\r\n      let temp = prevInputFulltextList;\r\n      temp.splice(index, 1);\r\n      return temp;\r\n    });\r\n  }\r\n\r\n  function addFormRow(index, type) {\r\n    if (type === \"fulltext\") {\r\n      return (\r\n        <div key={index} className=\"formRow\">\r\n          <select\r\n            className=\"regexSelect\"\r\n            {...register(\"fulltextOperator\" + index)}\r\n          >\r\n            <option value=\"and\">und</option>\r\n            <option value=\"or\">oder</option>\r\n            <option value=\"and_not\">und nicht</option>\r\n          </select>\r\n          <br />\r\n          <input type=\"text\" {...register(\"fulltext\" + index)} />\r\n          <input\r\n            type=\"button\"\r\n            value=\"-\"\r\n            onClick={() =>{removeFulltextFormRow(index); unregister(\"fulltext\"+index); unregister(\"fulltextOperator\"+index)}\r\n            }\r\n          />\r\n        </div>\r\n      );\r\n    } else if (type === \"speaker\") {\r\n      return (\r\n        <div key={index} className=\"formRow\">\r\n          <label className=\"extraSucheLabel\">oder</label>\r\n          <br />\r\n          <input type=\"text\" {...register(\"speaker\" + index)} />\r\n          <input\r\n            type=\"button\"\r\n            value=\"-\"\r\n            onClick={() => unregister(\"speaker\" + index)}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (type === \"affiliation\") {\r\n      return (\r\n        <div key={index} className=\"formRow\">\r\n          <label className=\"extraSucheLabel\">oder</label>\r\n          <br />\r\n          <input type=\"text\" {...register(\"affiliation\" + index)} />\r\n          <input\r\n            type=\"button\"\r\n            value=\"-\"\r\n            onClick={() => unregister(\"affiliation\" + index)}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default SearchForm;\r\n","export default __webpack_public_path__ + \"static/media/htw_logo.9947d2a9.jpg\";","import htw_logo from \"../htw_logo.jpg\";\r\nfunction HeaderBanner(params) {\r\n  return (\r\n    <div className=\"banner\">\r\n        <img src={htw_logo} alt=\"logo\" className=\"htwlogo\"></img>\r\n      <h1 className=\"projectName\">P2P Volltextsuche</h1>\r\n    </div>\r\n  );\r\n}\r\nexport default HeaderBanner;\r\n","import SearchForm from \"./components/SearchForm\";\r\nimport HeaderBanner from \"./components/HeaderBanner\";\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <HeaderBanner />\r\n      <SearchForm />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}